### YamlMime:TSPackage
uid: '@azure-rest/confidential-ledger'
name: '@azure-rest/confidential-ledger'
summary: ''
type: package
interfaces:
  - '@azure-rest/confidential-ledger.CollectionOutput'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerEnclavesOutput'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerErrorBodyOutput'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerErrorOutput'
  - '@azure-rest/confidential-ledger.ConsortiumMemberOutput'
  - '@azure-rest/confidential-ledger.ConsortiumOutput'
  - '@azure-rest/confidential-ledger.ConstitutionOutput'
  - '@azure-rest/confidential-ledger.CreateLedgerEntry200Headers'
  - '@azure-rest/confidential-ledger.CreateLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryBodyParam'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryMediaTypesParam'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.CreateLedgerEntrydefaultResponse'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUser200Response'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserBodyParam'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserMediaTypesParam'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserdefaultResponse'
  - '@azure-rest/confidential-ledger.DeleteUser'
  - '@azure-rest/confidential-ledger.DeleteUser204Response'
  - '@azure-rest/confidential-ledger.DeleteUserdefaultResponse'
  - '@azure-rest/confidential-ledger.EnclaveQuoteOutput'
  - '@azure-rest/confidential-ledger.GetConstitution'
  - '@azure-rest/confidential-ledger.GetConstitution200Response'
  - '@azure-rest/confidential-ledger.GetConstitutiondefaultResponse'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntry'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntrydefaultResponse'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotes'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotes200Response'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotesdefaultResponse'
  - '@azure-rest/confidential-ledger.GetLedgerEntry'
  - '@azure-rest/confidential-ledger.GetLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.GetLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.GetLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.GetLedgerEntrydefaultResponse'
  - '@azure-rest/confidential-ledger.GetReceipt'
  - '@azure-rest/confidential-ledger.GetReceipt200Response'
  - '@azure-rest/confidential-ledger.GetReceiptdefaultResponse'
  - '@azure-rest/confidential-ledger.GetTransactionStatus'
  - '@azure-rest/confidential-ledger.GetTransactionStatus200Response'
  - '@azure-rest/confidential-ledger.GetTransactionStatusdefaultResponse'
  - '@azure-rest/confidential-ledger.GetUser200Response'
  - '@azure-rest/confidential-ledger.GetUserdefaultResponse'
  - '@azure-rest/confidential-ledger.LedgerEntry'
  - '@azure-rest/confidential-ledger.LedgerEntryOutput'
  - '@azure-rest/confidential-ledger.LedgerIdentity'
  - '@azure-rest/confidential-ledger.LedgerQueryResultOutput'
  - '@azure-rest/confidential-ledger.LedgerUser'
  - '@azure-rest/confidential-ledger.LedgerUserOutput'
  - '@azure-rest/confidential-ledger.LedgerWriteResultOutput'
  - '@azure-rest/confidential-ledger.ListCollections'
  - '@azure-rest/confidential-ledger.ListCollections200Response'
  - '@azure-rest/confidential-ledger.ListCollectionsdefaultResponse'
  - '@azure-rest/confidential-ledger.ListConsortiumMembers'
  - '@azure-rest/confidential-ledger.ListConsortiumMembers200Response'
  - '@azure-rest/confidential-ledger.ListConsortiumMembersdefaultResponse'
  - '@azure-rest/confidential-ledger.ListLedgerEntries'
  - '@azure-rest/confidential-ledger.ListLedgerEntries200Response'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesQueryParam'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesQueryParamProperties'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesdefaultResponse'
  - '@azure-rest/confidential-ledger.PagedCollectionsOutput'
  - '@azure-rest/confidential-ledger.PagedLedgerEntriesOutput'
  - '@azure-rest/confidential-ledger.PagingOptions'
  - '@azure-rest/confidential-ledger.ReceiptContentsOutput'
  - '@azure-rest/confidential-ledger.ReceiptElementOutput'
  - '@azure-rest/confidential-ledger.ReceiptLeafComponentsOutput'
  - '@azure-rest/confidential-ledger.Routes'
  - '@azure-rest/confidential-ledger.TransactionReceiptOutput'
  - '@azure-rest/confidential-ledger.TransactionStatusOutput'
typeAliases:
  - '@azure-rest/confidential-ledger.ConfidentialLedgerClient'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserParameters'
  - '@azure-rest/confidential-ledger.DeleteUserParameters'
  - '@azure-rest/confidential-ledger.GetArrayType'
  - '@azure-rest/confidential-ledger.GetConstitutionParameters'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotesParameters'
  - '@azure-rest/confidential-ledger.GetLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.GetPage'
  - '@azure-rest/confidential-ledger.GetReceiptParameters'
  - '@azure-rest/confidential-ledger.GetTransactionStatusParameters'
  - '@azure-rest/confidential-ledger.GetUserParameters'
  - '@azure-rest/confidential-ledger.ListCollectionsParameters'
  - '@azure-rest/confidential-ledger.ListConsortiumMembersParameters'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesParameters'
  - '@azure-rest/confidential-ledger.PaginateReturn'
functions:
  - name: default(string, string, ClientOptions)
    uid: '@azure-rest/confidential-ledger.default'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(ledgerEndpoint: string, ledgerIdentityCertificate:
        string, options?: ClientOptions): ConfidentialLedgerClient
      parameters:
        - id: ledgerEndpoint
          type: string
          description: ''
        - id: ledgerIdentityCertificate
          type: string
          description: ''
        - id: options
          type: ClientOptions
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/confidential-ledger.ConfidentialLedgerClient"
          />
  - name: default(string, string, TokenCredential, ClientOptions)
    uid: '@azure-rest/confidential-ledger.default_1'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(ledgerEndpoint: string, ledgerIdentityCertificate:
        string, credentials: TokenCredential, options?: ClientOptions):
        ConfidentialLedgerClient
      parameters:
        - id: ledgerEndpoint
          type: string
          description: ''
        - id: ledgerIdentityCertificate
          type: string
          description: ''
        - id: credentials
          type: TokenCredential
          description: ''
        - id: options
          type: ClientOptions
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/confidential-ledger.ConfidentialLedgerClient"
          />
  - name: getLedgerIdentity(string, string)
    uid: '@azure-rest/confidential-ledger.getLedgerIdentity'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getLedgerIdentity(ledgerId: string, identityServiceBaseUrl?:
        string): Promise<LedgerIdentity>
      parameters:
        - id: ledgerId
          type: string
          description: ''
        - id: identityServiceBaseUrl
          type: string
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure-rest/confidential-ledger.LedgerIdentity"
          />&gt;
  - name: isUnexpected(GetConstitution200Response | GetConstitutiondefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetConstitution200Response |
        GetConstitutiondefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetConstitution200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.GetConstitutiondefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(ListConsortiumMembers200Response |
      ListConsortiumMembersdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_1'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListConsortiumMembers200Response |
        ListConsortiumMembersdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.ListConsortiumMembers200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.ListConsortiumMembersdefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(GetEnclaveQuotes200Response |
      GetEnclaveQuotesdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_2'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetEnclaveQuotes200Response |
        GetEnclaveQuotesdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetEnclaveQuotes200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.GetEnclaveQuotesdefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(ListCollections200Response | ListCollectionsdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_3'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListCollections200Response |
        ListCollectionsdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.ListCollections200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.ListCollectionsdefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(ListLedgerEntries200Response |
      ListLedgerEntriesdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_4'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListLedgerEntries200Response |
        ListLedgerEntriesdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.ListLedgerEntries200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.ListLedgerEntriesdefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(CreateLedgerEntry200Response |
      CreateLedgerEntrydefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_5'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: CreateLedgerEntry200Response |
        CreateLedgerEntrydefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.CreateLedgerEntry200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.CreateLedgerEntrydefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(GetLedgerEntry200Response | GetLedgerEntrydefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_6'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetLedgerEntry200Response |
        GetLedgerEntrydefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetLedgerEntry200Response" /> |
            <xref
            uid="@azure-rest/confidential-ledger.GetLedgerEntrydefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(GetReceipt200Response | GetReceiptdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_7'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetReceipt200Response |
        GetReceiptdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/confidential-ledger.GetReceipt200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.GetReceiptdefaultResponse" />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(GetTransactionStatus200Response |
      GetTransactionStatusdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_8'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetTransactionStatus200Response |
        GetTransactionStatusdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetTransactionStatus200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.GetTransactionStatusdefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(GetCurrentLedgerEntry200Response |
      GetCurrentLedgerEntrydefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_9'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetCurrentLedgerEntry200Response |
        GetCurrentLedgerEntrydefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetCurrentLedgerEntry200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.GetCurrentLedgerEntrydefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(DeleteUser204Response | DeleteUserdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_10'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: DeleteUser204Response |
        DeleteUserdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/confidential-ledger.DeleteUser204Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.DeleteUserdefaultResponse" />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(GetUser200Response | GetUserdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_11'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetUser200Response |
        GetUserdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/confidential-ledger.GetUser200Response" /> |
            <xref uid="@azure-rest/confidential-ledger.GetUserdefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(CreateOrUpdateUser200Response |
      CreateOrUpdateUserdefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_12'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: CreateOrUpdateUser200Response |
        CreateOrUpdateUserdefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.CreateOrUpdateUser200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.CreateOrUpdateUserdefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: paginate<TResponse>(Client, TResponse, PagingOptions<TResponse>)
    uid: '@azure-rest/confidential-ledger.paginate'
    package: '@azure-rest/confidential-ledger'
    summary: >-
      Helper to paginate results from an initial response that follows the
      specification of Autorest `x-ms-pageable` extension
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function paginate<TResponse>(client: Client, initialResponse: TResponse,
        options?: PagingOptions<TResponse>):
        PagedAsyncIterableIterator<PaginateReturn<TResponse>>
      parameters:
        - id: client
          type: Client
          description: Client to use for sending the next page requests
        - id: initialResponse
          type: TResponse
          description: >-
            Initial response containing the nextLink and current page of
            elements
        - id: options
          type: >-
            <xref uid="@azure-rest/confidential-ledger.PagingOptions"
            />&lt;TResponse&gt;
          description: ''
      return:
        description: '- PagedAsyncIterableIterator to iterate the elements'
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure-rest/confidential-ledger.PaginateReturn"
          />&lt;TResponse&gt;&gt;
