### YamlMime:TSType
name: PollOperation
uid: '@azure/core-lro.PollOperation'
package: '@azure/core-lro'
summary: >-
  PollOperation is an interface that defines how to update the local reference
  of the state of the remote

  long running operation, just as well as how to request the cancellation of the
  same operation.


  It also has a method to serialize the operation so that it can be stored and
  resumed at any time.
fullName: PollOperation<TState, TResult>
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: state
    uid: '@azure/core-lro.PollOperation.state'
    package: '@azure/core-lro'
    summary: >-
      The state of the operation.

      It will be used to store the basic properties of
      PollOperationState<TResult>,

      plus any custom property that the implementation may require.
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'state: TState'
      return:
        description: ''
        type: TState
methods:
  - name: 'cancel({ abortSignal?: AbortSignalLike })'
    uid: '@azure/core-lro.PollOperation.cancel'
    package: '@azure/core-lro'
    summary: >-
      Attempts to cancel the underlying operation.


      It only optionally receives an object with an abortSignal property, from
      @azure/abort-controller's AbortSignalLike.


      It returns a promise that should be resolved with an updated version of
      the poller's operation.
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: '`cancel` has been deprecated because it was not implemented.'
    syntax:
      content: >-
        function cancel(options?: { abortSignal?: AbortSignalLike }):
        Promise<PollOperation<TState, TResult>>
      parameters:
        - id: options
          type: '{ abortSignal?: AbortSignalLike }'
          description: Optional properties passed to the operation's update method.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollOperation" />&lt;TState,
          TResult&gt;&gt;
  - name: toString()
    uid: '@azure/core-lro.PollOperation.toString'
    package: '@azure/core-lro'
    summary: >-
      Serializes the operation.

      Useful when wanting to create a poller that monitors an existing
      operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function toString(): string'
      return:
        description: ''
        type: string
  - name: >-
      update({ abortSignal?: AbortSignalLike, fireProgress?: (state: TState) =>
      void })
    uid: '@azure/core-lro.PollOperation.update'
    package: '@azure/core-lro'
    summary: >-
      Defines how to request the remote service for updates on the status of the
      long running operation.


      It optionally receives an object with an abortSignal property, from
      @azure/abort-controller's AbortSignalLike.

      Also optionally receives a "fireProgress" function, which, if called, is
      responsible for triggering the

      poller's onProgress callbacks.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(options?: { abortSignal?: AbortSignalLike,
        fireProgress?: (state: TState) => void }): Promise<PollOperation<TState,
        TResult>>
      parameters:
        - id: options
          type: >-
            { abortSignal?: AbortSignalLike, fireProgress?: (state: TState)
            =&gt; void }
          description: Optional properties passed to the operation's update method.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollOperation" />&lt;TState,
          TResult&gt;&gt;
