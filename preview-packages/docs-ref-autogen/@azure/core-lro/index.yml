### YamlMime:TSPackage
uid: '@azure/core-lro'
name: '@azure/core-lro'
summary: ''
type: package
classes:
  - '@azure/core-lro.LroEngine'
  - '@azure/core-lro.Poller'
  - '@azure/core-lro.PollerCancelledError'
  - '@azure/core-lro.PollerStoppedError'
interfaces:
  - '@azure/core-lro.CreateHttpPollerOptions'
  - '@azure/core-lro.LongRunningOperation'
  - '@azure/core-lro.LroEngineOptions'
  - '@azure/core-lro.LroResponse'
  - '@azure/core-lro.OperationState'
  - '@azure/core-lro.PollOperation'
  - '@azure/core-lro.PollOperationState'
  - '@azure/core-lro.PollerLike'
  - '@azure/core-lro.RawResponse'
  - '@azure/core-lro.SimplePollerLike'
typeAliases:
  - '@azure/core-lro.CancelOnProgress'
  - '@azure/core-lro.LroResourceLocationConfig'
  - '@azure/core-lro.OperationStatus'
  - '@azure/core-lro.PollProgressCallback'
functions:
  - name: >-
      createHttpPoller<TResult, TState>(LongRunningOperation<unknown>,
      CreateHttpPollerOptions<TResult, TState>)
    uid: '@azure/core-lro.createHttpPoller'
    package: '@azure/core-lro'
    summary: Creates a poller that can be used to poll a long-running operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createHttpPoller<TResult, TState>(lro:
        LongRunningOperation<unknown>, options?:
        CreateHttpPollerOptions<TResult, TState>):
        Promise<SimplePollerLike<TState, TResult>>
      parameters:
        - id: lro
          type: <xref uid="@azure/core-lro.LongRunningOperation" />&lt;unknown&gt;
          description: Description of the long-running operation
        - id: options
          type: >-
            <xref uid="@azure/core-lro.CreateHttpPollerOptions" />&lt;TResult,
            TState&gt;
          description: options to configure the poller
      return:
        description: an initialized poller
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;TState,
          TResult&gt;&gt;
