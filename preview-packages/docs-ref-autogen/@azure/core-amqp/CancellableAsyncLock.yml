### YamlMime:TSType
name: CancellableAsyncLock
uid: '@azure/core-amqp.CancellableAsyncLock'
package: '@azure/core-amqp'
summary: |-
  CancellableAsyncLock provides a mechanism for forcing tasks using the same
  'key' to be executed serially.

  Pending tasks can be manually cancelled via an abortSignal or automatically
  cancelled by reach a provided timeout value.
fullName: CancellableAsyncLock
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: 'acquire<T>(string, (args: any[]) => Promise<T>, AcquireLockProperties)'
    uid: '@azure/core-amqp.CancellableAsyncLock.acquire'
    package: '@azure/core-amqp'
    summary: >-
      Returns a promise that resolves to the value returned by the provided task
      function.

      Only 1 task can be invoked at a time for a given `key` value.


      An acquire call can be cancelled via an `abortSignal`.

      If cancelled, the promise will be rejected with an `AbortError`.


      `acquireTimeoutInMs` can also be provided to properties.

      If the timeout is reached before the provided `task` is invoked,

      then the promise will be rejected with an Error stating the task

      timed out waiting to acquire a lock.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function acquire<T>(key: string, task: (args: any[]) => Promise<T>,
        properties: AcquireLockProperties): Promise<T>
      parameters:
        - id: key
          type: string
          description: All `acquire` calls are grouped by the provided `key`.
        - id: task
          type: '(args: any[]) =&gt; Promise&lt;T&gt;'
          description: The function to invoke once the lock has been acquired.
        - id: properties
          type: <xref uid="@azure/core-amqp.AcquireLockProperties" />
          description: Additional properties to control the behavior of `acquire`.
      return:
        description: ''
        type: Promise&lt;T&gt;
