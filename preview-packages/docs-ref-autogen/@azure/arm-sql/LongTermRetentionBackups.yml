### YamlMime:TSType
name: LongTermRetentionBackups
uid: '@azure/arm-sql.LongTermRetentionBackups'
package: '@azure/arm-sql'
summary: Interface representing a LongTermRetentionBackups.
fullName: LongTermRetentionBackups
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCopy(string, string, string, string,
      CopyLongTermRetentionBackupParameters,
      LongTermRetentionBackupsCopyOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginCopy'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCopy(locationName: string, longTermRetentionServerName:
        string, longTermRetentionDatabaseName: string, backupName: string,
        parameters: CopyLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsCopyOptionalParams):
        Promise<SimplePollerLike<OperationState<LongTermRetentionBackupOperationResult>,
        LongTermRetentionBackupOperationResult>>
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsCopyOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;,
          <xref uid="@azure/arm-sql.LongTermRetentionBackupOperationResult"
          />&gt;&gt;
  - name: >-
      beginCopyAndWait(string, string, string, string,
      CopyLongTermRetentionBackupParameters,
      LongTermRetentionBackupsCopyOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginCopyAndWait'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCopyAndWait(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, backupName: string, parameters:
        CopyLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsCopyOptionalParams):
        Promise<LongTermRetentionBackupOperationResult>
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsCopyOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;
  - name: >-
      beginCopyByResourceGroup(string, string, string, string, string,
      CopyLongTermRetentionBackupParameters,
      LongTermRetentionBackupsCopyByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginCopyByResourceGroup'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup to a different server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCopyByResourceGroup(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        CopyLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsCopyByResourceGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<LongTermRetentionBackupOperationResult>,
        LongTermRetentionBackupOperationResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsCopyByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;,
          <xref uid="@azure/arm-sql.LongTermRetentionBackupOperationResult"
          />&gt;&gt;
  - name: >-
      beginCopyByResourceGroupAndWait(string, string, string, string, string,
      CopyLongTermRetentionBackupParameters,
      LongTermRetentionBackupsCopyByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginCopyByResourceGroupAndWait'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup to a different server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCopyByResourceGroupAndWait(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        CopyLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsCopyByResourceGroupOptionalParams):
        Promise<LongTermRetentionBackupOperationResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsCopyByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;
  - name: >-
      beginDelete(string, string, string, string,
      LongTermRetentionBackupsDeleteOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginDelete'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(locationName: string, longTermRetentionServerName:
        string, longTermRetentionDatabaseName: string, backupName: string,
        options?: LongTermRetentionBackupsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string, string,
      LongTermRetentionBackupsDeleteOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginDeleteAndWait'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, backupName: string, options?:
        LongTermRetentionBackupsDeleteOptionalParams): Promise<void>
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDeleteByResourceGroup(string, string, string, string, string,
      LongTermRetentionBackupsDeleteByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginDeleteByResourceGroup'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteByResourceGroup(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        LongTermRetentionBackupsDeleteByResourceGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsDeleteByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginDeleteByResourceGroupAndWait(string, string, string, string, string,
      LongTermRetentionBackupsDeleteByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginDeleteByResourceGroupAndWait'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteByResourceGroupAndWait(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        LongTermRetentionBackupsDeleteByResourceGroupOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsDeleteByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, string,
      UpdateLongTermRetentionBackupParameters,
      LongTermRetentionBackupsUpdateOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(locationName: string, longTermRetentionServerName:
        string, longTermRetentionDatabaseName: string, backupName: string,
        parameters: UpdateLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<LongTermRetentionBackupOperationResult>,
        LongTermRetentionBackupOperationResult>>
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;,
          <xref uid="@azure/arm-sql.LongTermRetentionBackupOperationResult"
          />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, string,
      UpdateLongTermRetentionBackupParameters,
      LongTermRetentionBackupsUpdateOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, backupName: string, parameters:
        UpdateLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsUpdateOptionalParams):
        Promise<LongTermRetentionBackupOperationResult>
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;
  - name: >-
      beginUpdateByResourceGroup(string, string, string, string, string,
      UpdateLongTermRetentionBackupParameters,
      LongTermRetentionBackupsUpdateByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginUpdateByResourceGroup'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateByResourceGroup(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        UpdateLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsUpdateByResourceGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<LongTermRetentionBackupOperationResult>,
        LongTermRetentionBackupOperationResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsUpdateByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;,
          <xref uid="@azure/arm-sql.LongTermRetentionBackupOperationResult"
          />&gt;&gt;
  - name: >-
      beginUpdateByResourceGroupAndWait(string, string, string, string, string,
      UpdateLongTermRetentionBackupParameters,
      LongTermRetentionBackupsUpdateByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginUpdateByResourceGroupAndWait'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateByResourceGroupAndWait(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        UpdateLongTermRetentionBackupParameters, options?:
        LongTermRetentionBackupsUpdateByResourceGroupOptionalParams):
        Promise<LongTermRetentionBackupOperationResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsUpdateByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackupOperationResult" />&gt;
  - name: >-
      get(string, string, string, string,
      LongTermRetentionBackupsGetOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.get'
    package: '@azure/arm-sql'
    summary: Gets a long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        LongTermRetentionBackupsGetOptionalParams):
        Promise<LongTermRetentionBackup>
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: >-
            <xref uid="@azure/arm-sql.LongTermRetentionBackupsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.LongTermRetentionBackup" />&gt;
  - name: >-
      getByResourceGroup(string, string, string, string, string,
      LongTermRetentionBackupsGetByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.getByResourceGroup'
    package: '@azure/arm-sql'
    summary: Gets a long term retention backup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getByResourceGroup(resourceGroupName: string, locationName:
        string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        LongTermRetentionBackupsGetByResourceGroupOptionalParams):
        Promise<LongTermRetentionBackup>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsGetByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.LongTermRetentionBackup" />&gt;
  - name: >-
      listByDatabase(string, string, string,
      LongTermRetentionBackupsListByDatabaseOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabase'
    package: '@azure/arm-sql'
    summary: Lists all long term retention backups for a database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, options?: LongTermRetentionBackupsListByDatabaseOptionalParams):
        PagedAsyncIterableIterator<LongTermRetentionBackup,
        LongTermRetentionBackup[], PageSettings>
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />, <xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />[], PageSettings&gt;
  - name: >-
      listByLocation(string,
      LongTermRetentionBackupsListByLocationOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocation'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given location.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByLocation(locationName: string, options?:
        LongTermRetentionBackupsListByLocationOptionalParams):
        PagedAsyncIterableIterator<LongTermRetentionBackup,
        LongTermRetentionBackup[], PageSettings>
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />, <xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />[], PageSettings&gt;
  - name: >-
      listByResourceGroupDatabase(string, string, string, string,
      LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupDatabase'
    package: '@azure/arm-sql'
    summary: Lists all long term retention backups for a database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupDatabase(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, options?:
        LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams):
        PagedAsyncIterableIterator<LongTermRetentionBackup,
        LongTermRetentionBackup[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />, <xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />[], PageSettings&gt;
  - name: >-
      listByResourceGroupLocation(string, string,
      LongTermRetentionBackupsListByResourceGroupLocationOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupLocation'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given location.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupLocation(resourceGroupName: string,
        locationName: string, options?:
        LongTermRetentionBackupsListByResourceGroupLocationOptionalParams):
        PagedAsyncIterableIterator<LongTermRetentionBackup,
        LongTermRetentionBackup[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupLocationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />, <xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />[], PageSettings&gt;
  - name: >-
      listByResourceGroupServer(string, string, string,
      LongTermRetentionBackupsListByResourceGroupServerOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupServer'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupServer(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string, options?:
        LongTermRetentionBackupsListByResourceGroupServerOptionalParams):
        PagedAsyncIterableIterator<LongTermRetentionBackup,
        LongTermRetentionBackup[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupServerOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />, <xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />[], PageSettings&gt;
  - name: >-
      listByServer(string, string,
      LongTermRetentionBackupsListByServerOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByServer'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(locationName: string, longTermRetentionServerName:
        string, options?: LongTermRetentionBackupsListByServerOptionalParams):
        PagedAsyncIterableIterator<LongTermRetentionBackup,
        LongTermRetentionBackup[], PageSettings>
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByServerOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />, <xref
          uid="@azure/arm-sql.LongTermRetentionBackup" />[], PageSettings&gt;
