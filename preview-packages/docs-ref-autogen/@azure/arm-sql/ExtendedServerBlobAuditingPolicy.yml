### YamlMime:TSType
name: ExtendedServerBlobAuditingPolicy
uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy'
package: '@azure/arm-sql'
summary: An extended server blob auditing policy.
fullName: ExtendedServerBlobAuditingPolicy
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: auditActionsAndGroups
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.auditActionsAndGroups'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the Actions-Groups and Actions to audit.


      The recommended set of action groups to use is the following combination -
      this will audit all the queries and stored procedures executed against the
      database, as well as successful and failed logins:


      BATCH_COMPLETED_GROUP,

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,

      FAILED_DATABASE_AUTHENTICATION_GROUP.


      This above combination is also the set that is configured by default when
      enabling auditing from the Azure portal.


      The supported action groups to audit are (note: choose only specific
      groups that cover your auditing needs. Using unnecessary groups could lead
      to very large quantities of audit records):


      APPLICATION_ROLE_CHANGE_PASSWORD_GROUP

      BACKUP_RESTORE_GROUP

      DATABASE_LOGOUT_GROUP

      DATABASE_OBJECT_CHANGE_GROUP

      DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP

      DATABASE_OBJECT_PERMISSION_CHANGE_GROUP

      DATABASE_OPERATION_GROUP

      DATABASE_PERMISSION_CHANGE_GROUP

      DATABASE_PRINCIPAL_CHANGE_GROUP

      DATABASE_PRINCIPAL_IMPERSONATION_GROUP

      DATABASE_ROLE_MEMBER_CHANGE_GROUP

      FAILED_DATABASE_AUTHENTICATION_GROUP

      SCHEMA_OBJECT_ACCESS_GROUP

      SCHEMA_OBJECT_CHANGE_GROUP

      SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP

      SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP

      USER_CHANGE_PASSWORD_GROUP

      BATCH_STARTED_GROUP

      BATCH_COMPLETED_GROUP

      DBCC_GROUP

      DATABASE_OWNERSHIP_CHANGE_GROUP

      DATABASE_CHANGE_GROUP

      LEDGER_OPERATION_GROUP


      These are groups that cover all sql statements and stored procedures
      executed against the database, and should not be used in combination with
      other groups as this will result in duplicate audit logs.


      For more information, see [Database-Level Audit Action
      Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).


      For Database auditing policy, specific Actions can also be specified (note
      that Actions cannot be specified for Server auditing policy). The
      supported actions to audit are:

      SELECT

      UPDATE

      INSERT

      DELETE

      EXECUTE

      RECEIVE

      REFERENCES


      The general form for defining an action to be audited is:

      {action} ON {object} BY {principal}


      Note that <object> in the above format can refer to an object like a
      table, view, or stored procedure, or an entire database or schema. For the
      latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are
      used, respectively.


      For example:

      SELECT on dbo.myTable by public

      SELECT on DATABASE::myDatabase by public

      SELECT on SCHEMA::mySchema by public


      For more information, see [Database-Level Audit
      Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
    fullName: auditActionsAndGroups
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'auditActionsAndGroups?: string[]'
      return:
        description: ''
        type: string[]
  - name: isAzureMonitorTargetEnabled
    uid: >-
      @azure/arm-sql.ExtendedServerBlobAuditingPolicy.isAzureMonitorTargetEnabled
    package: '@azure/arm-sql'
    summary: >-
      Specifies whether audit events are sent to Azure Monitor.

      In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
      and 'IsAzureMonitorTargetEnabled' as true.


      When using REST API to configure auditing, Diagnostic Settings with
      'SQLSecurityAuditEvents' diagnostic logs category on the database should
      be also created.

      Note that for server level audit you should use the 'master' database as
      {databaseName}.


      Diagnostic Settings URI format:

      PUT
      https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview


      For more information, see [Diagnostic Settings REST
      API](https://go.microsoft.com/fwlink/?linkid=2033207)

      or [Diagnostic Settings
      PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
    fullName: isAzureMonitorTargetEnabled
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'isAzureMonitorTargetEnabled?: boolean'
      return:
        description: ''
        type: boolean
  - name: isDevopsAuditEnabled
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.isDevopsAuditEnabled'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the state of devops audit. If state is Enabled, devops logs will
      be sent to Azure Monitor.

      In order to send the events to Azure Monitor, specify 'State' as
      'Enabled', 'IsAzureMonitorTargetEnabled' as true and
      'IsDevopsAuditEnabled' as true


      When using REST API to configure auditing, Diagnostic Settings with
      'DevOpsOperationsAudit' diagnostic logs category on the master database
      should also be created.


      Diagnostic Settings URI format:

      PUT
      https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview


      For more information, see [Diagnostic Settings REST
      API](https://go.microsoft.com/fwlink/?linkid=2033207)

      or [Diagnostic Settings
      PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
    fullName: isDevopsAuditEnabled
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'isDevopsAuditEnabled?: boolean'
      return:
        description: ''
        type: boolean
  - name: isManagedIdentityInUse
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.isManagedIdentityInUse'
    package: '@azure/arm-sql'
    summary: Specifies whether Managed Identity is used to access blob storage
    fullName: isManagedIdentityInUse
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'isManagedIdentityInUse?: boolean'
      return:
        description: ''
        type: boolean
  - name: isStorageSecondaryKeyInUse
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.isStorageSecondaryKeyInUse'
    package: '@azure/arm-sql'
    summary: >-
      Specifies whether storageAccountAccessKey value is the storage's secondary
      key.
    fullName: isStorageSecondaryKeyInUse
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'isStorageSecondaryKeyInUse?: boolean'
      return:
        description: ''
        type: boolean
  - name: predicateExpression
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.predicateExpression'
    package: '@azure/arm-sql'
    summary: Specifies condition of where clause when creating an audit.
    fullName: predicateExpression
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'predicateExpression?: string'
      return:
        description: ''
        type: string
  - name: queueDelayMs
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.queueDelayMs'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the amount of time in milliseconds that can elapse before audit
      actions are forced to be processed.

      The default minimum value is 1000 (1 second). The maximum is
      2,147,483,647.
    fullName: queueDelayMs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'queueDelayMs?: number'
      return:
        description: ''
        type: number
  - name: retentionDays
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.retentionDays'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the number of days to keep in the audit logs in the storage
      account.
    fullName: retentionDays
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retentionDays?: number'
      return:
        description: ''
        type: number
  - name: state
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.state'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the state of the audit. If state is Enabled, storageEndpoint or
      isAzureMonitorTargetEnabled are required.
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'state?: BlobAuditingPolicyState'
      return:
        description: ''
        type: <xref uid="@azure/arm-sql.BlobAuditingPolicyState" />
  - name: storageAccountAccessKey
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.storageAccountAccessKey'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the identifier key of the auditing storage account.

      If state is Enabled and storageEndpoint is specified, not specifying the
      storageAccountAccessKey will use SQL server system-assigned managed
      identity to access the storage.

      Prerequisites for using managed identity authentication:

      1. Assign SQL Server a system-assigned managed identity in Azure Active
      Directory (AAD).

      2. Grant SQL Server identity access to the storage account by adding
      'Storage Blob Data Contributor' RBAC role to the server identity.

      For more information, see [Auditing to storage using Managed Identity
      authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
    fullName: storageAccountAccessKey
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'storageAccountAccessKey?: string'
      return:
        description: ''
        type: string
  - name: storageAccountSubscriptionId
    uid: >-
      @azure/arm-sql.ExtendedServerBlobAuditingPolicy.storageAccountSubscriptionId
    package: '@azure/arm-sql'
    summary: Specifies the blob storage subscription Id.
    fullName: storageAccountSubscriptionId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'storageAccountSubscriptionId?: string'
      return:
        description: ''
        type: string
  - name: storageEndpoint
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.storageEndpoint'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the blob storage endpoint (e.g.
      https://MyAccount.blob.core.windows.net). If state is Enabled,
      storageEndpoint or isAzureMonitorTargetEnabled is required.
    fullName: storageEndpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'storageEndpoint?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: id
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.id'
    package: '@azure/arm-sql'
    summary: >-
      Resource ID.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ProxyResource.id](xref:@azure/arm-sql.ProxyResource.id)
  - name: name
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.name'
    package: '@azure/arm-sql'
    summary: >-
      Resource name.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ProxyResource.name](xref:@azure/arm-sql.ProxyResource.name)
  - name: type
    uid: '@azure/arm-sql.ExtendedServerBlobAuditingPolicy.type'
    package: '@azure/arm-sql'
    summary: >-
      Resource type.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: type
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'type?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ProxyResource.type](xref:@azure/arm-sql.ProxyResource.type)
extends: <xref uid="@azure/arm-sql.ProxyResource" />
