### YamlMime:TSType
name: Servers
uid: '@azure/arm-sql.Servers'
package: '@azure/arm-sql'
summary: Interface representing a Servers.
fullName: Servers
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Server,
      ServersCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.Servers.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates or updates a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, parameters: Server, options?:
        ServersCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Server>, Server>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Server" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.Server" />&gt;, <xref uid="@azure/arm-sql.Server"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Server,
      ServersCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.Servers.beginCreateOrUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Creates or updates a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serverName: string, parameters: Server, options?:
        ServersCreateOrUpdateOptionalParams): Promise<Server>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Server" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.Server" />&gt;
  - name: beginDelete(string, string, ServersDeleteOptionalParams)
    uid: '@azure/arm-sql.Servers.beginDelete'
    package: '@azure/arm-sql'
    summary: Deletes a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, serverName: string,
        options?: ServersDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginDeleteAndWait(string, string, ServersDeleteOptionalParams)
    uid: '@azure/arm-sql.Servers.beginDeleteAndWait'
    package: '@azure/arm-sql'
    summary: Deletes a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, serverName:
        string, options?: ServersDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginImportDatabase(string, string, ImportNewDatabaseDefinition,
      ServersImportDatabaseOptionalParams)
    uid: '@azure/arm-sql.Servers.beginImportDatabase'
    package: '@azure/arm-sql'
    summary: Imports a bacpac into a new database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImportDatabase(resourceGroupName: string, serverName:
        string, parameters: ImportNewDatabaseDefinition, options?:
        ServersImportDatabaseOptionalParams):
        Promise<SimplePollerLike<OperationState<ImportExportOperationResult>,
        ImportExportOperationResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportNewDatabaseDefinition" />
          description: The database import request parameters.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersImportDatabaseOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.ImportExportOperationResult" />&gt;, <xref
          uid="@azure/arm-sql.ImportExportOperationResult" />&gt;&gt;
  - name: >-
      beginImportDatabaseAndWait(string, string, ImportNewDatabaseDefinition,
      ServersImportDatabaseOptionalParams)
    uid: '@azure/arm-sql.Servers.beginImportDatabaseAndWait'
    package: '@azure/arm-sql'
    summary: Imports a bacpac into a new database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImportDatabaseAndWait(resourceGroupName: string,
        serverName: string, parameters: ImportNewDatabaseDefinition, options?:
        ServersImportDatabaseOptionalParams):
        Promise<ImportExportOperationResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportNewDatabaseDefinition" />
          description: The database import request parameters.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersImportDatabaseOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-sql.ImportExportOperationResult"
          />&gt;
  - name: beginRefreshStatus(string, string, ServersRefreshStatusOptionalParams)
    uid: '@azure/arm-sql.Servers.beginRefreshStatus'
    package: '@azure/arm-sql'
    summary: Refresh external governance enablement status.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRefreshStatus(resourceGroupName: string, serverName:
        string, options?: ServersRefreshStatusOptionalParams):
        Promise<SimplePollerLike<OperationState<RefreshExternalGovernanceStatusOperationResult>,
        RefreshExternalGovernanceStatusOperationResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersRefreshStatusOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.RefreshExternalGovernanceStatusOperationResult"
          />&gt;, <xref
          uid="@azure/arm-sql.RefreshExternalGovernanceStatusOperationResult"
          />&gt;&gt;
  - name: >-
      beginRefreshStatusAndWait(string, string,
      ServersRefreshStatusOptionalParams)
    uid: '@azure/arm-sql.Servers.beginRefreshStatusAndWait'
    package: '@azure/arm-sql'
    summary: Refresh external governance enablement status.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRefreshStatusAndWait(resourceGroupName: string,
        serverName: string, options?: ServersRefreshStatusOptionalParams):
        Promise<RefreshExternalGovernanceStatusOperationResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersRefreshStatusOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-sql.RefreshExternalGovernanceStatusOperationResult"
          />&gt;
  - name: beginUpdate(string, string, ServerUpdate, ServersUpdateOptionalParams)
    uid: '@azure/arm-sql.Servers.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serverName: string,
        parameters: ServerUpdate, options?: ServersUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Server>, Server>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ServerUpdate" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-sql.Server" />&gt;, <xref uid="@azure/arm-sql.Server"
          />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, ServerUpdate,
      ServersUpdateOptionalParams)
    uid: '@azure/arm-sql.Servers.beginUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Updates a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, serverName:
        string, parameters: ServerUpdate, options?:
        ServersUpdateOptionalParams): Promise<Server>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ServerUpdate" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.Server" />&gt;
  - name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      ServersCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-sql.Servers.checkNameAvailability'
    package: '@azure/arm-sql'
    summary: Determines whether a resource can be created with the specified name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters: CheckNameAvailabilityRequest,
        options?: ServersCheckNameAvailabilityOptionalParams):
        Promise<CheckNameAvailabilityResponse>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-sql.CheckNameAvailabilityRequest" />
          description: The name availability request parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ServersCheckNameAvailabilityOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-sql.CheckNameAvailabilityResponse"
          />&gt;
  - name: get(string, string, ServersGetOptionalParams)
    uid: '@azure/arm-sql.Servers.get'
    package: '@azure/arm-sql'
    summary: Gets a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options?:
        ServersGetOptionalParams): Promise<Server>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-sql.ServersGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.Server" />&gt;
  - name: list(ServersListOptionalParams)
    uid: '@azure/arm-sql.Servers.list'
    package: '@azure/arm-sql'
    summary: Gets a list of all servers in the subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ServersListOptionalParams):
        PagedAsyncIterableIterator<Server, Server[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-sql.ServersListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-sql.Server" />,
          <xref uid="@azure/arm-sql.Server" />[], PageSettings&gt;
  - name: listByResourceGroup(string, ServersListByResourceGroupOptionalParams)
    uid: '@azure/arm-sql.Servers.listByResourceGroup'
    package: '@azure/arm-sql'
    summary: Gets a list of servers in a resource groups.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        ServersListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Server, Server[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: options
          type: >-
            <xref uid="@azure/arm-sql.ServersListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-sql.Server" />,
          <xref uid="@azure/arm-sql.Server" />[], PageSettings&gt;
