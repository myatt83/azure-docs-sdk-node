### YamlMime:TSType
name: AzurePowerShellCredential
uid: '@azure/identity.AzurePowerShellCredential'
package: '@azure/identity'
summary: >-
  This credential will use the currently logged-in user information from the

  Azure PowerShell module. To do so, it will read the user access token and

  expire time with Azure PowerShell command `Get-AzAccessToken -ResourceUrl
  {ResourceScope}`
fullName: AzurePowerShellCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: AzurePowerShellCredential(AzurePowerShellCredentialOptions)
    uid: '@azure/identity.AzurePowerShellCredential.constructor'
    package: '@azure/identity'
    summary: >-
      Creates an instance of the
      [AzurePowerShellCredential](xref:@azure/identity.AzurePowerShellCredential).


      To use this credential:

      - Install the Azure Az PowerShell module with:
        `Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force`.
      - You have already logged in to Azure PowerShell using the command

      `Connect-AzAccount` from the command line.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new AzurePowerShellCredential(options?:
        AzurePowerShellCredentialOptions)
      parameters:
        - id: options
          type: <xref uid="@azure/identity.AzurePowerShellCredentialOptions" />
          description: Options, to optionally allow multi-tenant requests.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.AzurePowerShellCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Authenticates with Azure Active Directory and returns an access token if
      successful.

      If the authentication cannot be performed through PowerShell, a
      [CredentialUnavailableError](xref:@azure/identity.CredentialUnavailableError)
      will be thrown.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: >-
            The options used to configure any requests this TokenCredential
            implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
