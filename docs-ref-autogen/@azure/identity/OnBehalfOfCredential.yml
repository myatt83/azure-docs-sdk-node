### YamlMime:TSType
name: OnBehalfOfCredential
uid: '@azure/identity.OnBehalfOfCredential'
package: '@azure/identity'
summary: >-
  Enables authentication to Azure Active Directory using the [On Behalf Of
  flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow).
fullName: OnBehalfOfCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      OnBehalfOfCredential(OnBehalfOfCredentialCertificateOptions &
      MultiTenantTokenCredentialOptions & CredentialPersistenceOptions)
    uid: '@azure/identity.OnBehalfOfCredential.constructor'
    package: '@azure/identity'
    summary: >-
      Creates an instance of the
      [OnBehalfOfCredential](xref:@azure/identity.OnBehalfOfCredential) with the
      details

      needed to authenticate against Azure Active Directory with path to a PEM
      certificate,

      and an user assertion.


      Example using the `KeyClient` from
      [@azure/keyvault-keys](https://www.npmjs.com/package/@azure/keyvault-keys):


      ```ts

      const tokenCredential = new OnBehalfOfCredential({
        tenantId,
        clientId,
        certificatePath: "/path/to/certificate.pem",
        userAssertionToken: "access-token"
      });

      const client = new KeyClient("vault-url", tokenCredential);


      await client.getKey("key-name");

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new OnBehalfOfCredential(options: OnBehalfOfCredentialCertificateOptions
        & MultiTenantTokenCredentialOptions & CredentialPersistenceOptions)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/identity.OnBehalfOfCredentialCertificateOptions"
            /> & <xref uid="@azure/identity.MultiTenantTokenCredentialOptions"
            /> & <xref uid="@azure/identity.CredentialPersistenceOptions" />
          description: Optional parameters, generally common across credentials.
  - name: >-
      OnBehalfOfCredential(OnBehalfOfCredentialSecretOptions &
      MultiTenantTokenCredentialOptions & CredentialPersistenceOptions)
    uid: '@azure/identity.OnBehalfOfCredential.constructor_1'
    package: '@azure/identity'
    summary: >-
      Creates an instance of the
      [OnBehalfOfCredential](xref:@azure/identity.OnBehalfOfCredential) with the
      details

      needed to authenticate against Azure Active Directory with a client

      secret and an user assertion.


      Example using the `KeyClient` from
      [@azure/keyvault-keys](https://www.npmjs.com/package/@azure/keyvault-keys):


      ```ts

      const tokenCredential = new OnBehalfOfCredential({
        tenantId,
        clientId,
        clientSecret,
        userAssertionToken: "access-token"
      });

      const client = new KeyClient("vault-url", tokenCredential);


      await client.getKey("key-name");

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new OnBehalfOfCredential(options: OnBehalfOfCredentialSecretOptions &
        MultiTenantTokenCredentialOptions & CredentialPersistenceOptions)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/identity.OnBehalfOfCredentialSecretOptions" /> &
            <xref uid="@azure/identity.MultiTenantTokenCredentialOptions" /> &
            <xref uid="@azure/identity.CredentialPersistenceOptions" />
          description: Optional parameters, generally common across credentials.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.OnBehalfOfCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Authenticates with Azure Active Directory and returns an access token if
      successful.

      If authentication fails, a
      [CredentialUnavailableError](xref:@azure/identity.CredentialUnavailableError)
      will be thrown with the details of the failure.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: The options used to configure the underlying network requests.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
